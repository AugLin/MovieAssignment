// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MovieDbConnection))]
    [Migration("20241025231106_Updated2")]
    partial class Updated2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.Casts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(128)");

                    b.Property<string>("ProfilePath")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2084)");

                    b.Property<string>("TmdbUrl")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.HasKey("Id");

                    b.ToTable("Casts");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Favorites", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Genres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(24)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("ApplicationCore.Entities.MovieCasts", b =>
                {
                    b.Property<int>("CastId")
                        .HasColumnType("int");

                    b.Property<string>("Character")
                        .HasColumnType("VARCHAR(450)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("CastId", "Character", "MovieId");

                    b.ToTable("MovieCasts");
                });

            modelBuilder.Entity("ApplicationCore.Entities.MovieGenres", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("GenreId", "MovieId");

                    b.ToTable("MovieGenres");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Movies", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("BackdropUrl")
                        .HasColumnType("VARCHAR(2084)");

                    b.Property<decimal>("Budget")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImdbUrl")
                        .HasColumnType("VARCHAR(2084)");

                    b.Property<string>("OriginalLanguage")
                        .HasColumnType("VARCHAR(64)");

                    b.Property<string>("Overview")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("PosterUrl")
                        .HasColumnType("VARCHAR(2084)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(5,2)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<int>("Runtime")
                        .HasColumnType("int");

                    b.Property<string>("Tagline")
                        .HasColumnType("VARCHAR(512)");

                    b.Property<string>("Title")
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("TmdbUrl")
                        .HasColumnType("VARCHAR(2084)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Purchases", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseNumber")
                        .IsRequired()
                        .HasColumnType("UNIQUEIDENTIFIER ");

                    b.Property<DateTime>("PurchaseTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("DECIMAL(5,2) ");

                    b.HasKey("MovieId", "UserId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Reviews", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rating")
                        .HasColumnType("DECIMAL(3,2)");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.HasKey("MovieId", "UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Trailers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2084)");

                    b.Property<string>("TrailerUrl")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2084)");

                    b.HasKey("Id");

                    b.ToTable("Trailers");
                });

            modelBuilder.Entity("ApplicationCore.Entities.UserRoles", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(128)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<int>("IsLocked")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(128)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("VARCHAR(16)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1024)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
